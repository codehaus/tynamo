<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<name>Tynamo Parent</name>
	<url>http://tynamo.org/</url>

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.tynamo</groupId>
	<artifactId>tynamo-parent</artifactId>
	<packaging>pom</packaging>
	<version>0.0.10</version>

	<parent>
		<groupId>org.codehaus</groupId>
		<artifactId>codehaus-parent</artifactId>
		<version>4</version>
	</parent>

	<properties>
		<tapestry-release-version>5.3.2</tapestry-release-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<modules>
		<!-- This is a separately releaseable super pom, don't specify any modules. Use "modules" project for sub projects that are released together -->
	</modules>

	<description>Model-driven Java web framework based on Tapestry 5</description>
	<inceptionYear>2004</inceptionYear>
	<developers>
		<developer>
			<id>akochnev</id>
			<name>Alex Kotchnev</name>
			<email>akochnev (-at-) gmail.com</email>
		</developer>
		<developer>
			<id>ascandroli</id>
			<name>Alejandro Scandroli</name>
			<organization>Amneris Web Solutions</organization>
			<organizationUrl>http://www.amneris.es/</organizationUrl>
			<email>ascandroli@N05PAM.codehaus.org</email>
			<url>http://docs.codehaus.org/display/~ascandroli</url>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>kaosko</id>
			<name>Kalle Korhonen</name>
			<email>kaosko@apache.org</email>
			<url>http://docs.codehaus.org/display/~kaosko</url>
			<timezone>-8</timezone>
		</developer>
		<developer>
			<id>psartini</id>
			<name>Piero Sartini</name>
			<email>ps (-at-) sartini-its.com</email>
			<url>http://www.pierosartini.eu</url>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>piercew</id>
			<name>Pierce T. Wetter</name>
			<email>pierce (-at-) twinforces.com</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<mailingLists>
		<mailingList>
			<name>Tynamo User List</name>
			<subscribe>http://xircles.codehaus.org/manage_email/user@tynamo.codehaus.org</subscribe>
			<unsubscribe>http://xircles.codehaus.org/manage_email/user@tynamo.codehaus.org</unsubscribe>
			<post>user@tynamo.codehaus.org</post>
			<archive>http://archive.tynamo.codehaus.org/users</archive>
			<!-- Not enabled yet
			<otherArchives>
				<otherArchive>http://www.nabble.com/-Users-f27435.html</otherArchive>
			</otherArchives>
			-->
		</mailingList>
		<mailingList>
			<name>Tynamo Developer List</name>
			<subscribe>http://xircles.codehaus.org/manage_email/dev@tynamo.codehaus.org</subscribe>
			<unsubscribe>http://xircles.codehaus.org/manage_email/dev@tynamo.codehaus.org</unsubscribe>
			<post>dev@tynamo.codehaus.org</post>
			<archive>http://archive.tynamo.codehaus.org/dev</archive>
		</mailingList>
	</mailingLists>
	<scm>
		<connection>scm:svn:http://svn.codehaus.org/tynamo/tags/tynamo-parent-0.0.10</connection>
		<developerConnection>scm:svn:https://svn.codehaus.org/tynamo/tags/tynamo-parent-0.0.10</developerConnection>
		<url>http://svn.codehaus.org/tynamo/tags/tynamo-parent-0.0.10</url>
	</scm>

	<prerequisites>
		<maven>2.2.1</maven>
	</prerequisites>

	<repositories>
		<!-- Don't use snapshots unless absolutely necessary because they are forever burned into the pom once released
		I'd much rather use a Maven proxy (see http://jira.codehaus.org/browse/HAUS-1784) but until Codehaus sets up one,
		we need some repositories for the ci builds to succeed. 
		
		Properly document why each repo is needed!
		-->

		<!-- There is a lag time before codehaus repository is synched to repo1. If you release a new tynamo parent and
		immediately make another Tynamo module use that version, the ci build will fail if codehaus release repository isn't
		specified here. 
		
		Still, it's not good enough reason to declare the repo. Perhaps as a profile if we really need it, otherwise we'll
		just need to wait till codehaus repo is synched to central
		<repository>
			<id>codehaus-releases</id>
			<url>http://repository.codehaus.org</url>
		</repository>
		-->

		<!-- If any of our modules depend on snapshots that follow independent release cycle (not part of the same reactor build)
		they need to know where to obtain the snapshots
		-->
		<repository>
			<id>codehaus-ci</id>
			<name>Official CI snapshot repository</name>
			<url>https://nexus.codehaus.org/content/groups/snapshots-group/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
	</pluginRepositories>

	<ciManagement>
		<system>bamboo</system>
		<url>http://bamboo.ci.codehaus.org/browse/TYNAMO</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<configuration>
					<address>dev@tynamo.codehaus.org</address>
				</configuration>
			</notifier>
			<notifier>
				<type>irc</type>
				<configuration>
					<host>irc.codehaus.org</host>
					<port>6667</port>
					<channel>#tynamo</channel>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>

	<distributionManagement>
		<site>
			<id>tynamo-site</id>
			<!-- Note the url. Only static files deployed in /constant/ can be decorated by Unity -->
			<url>dav:https://dav.codehaus.org/tynamo/constant</url>
		</site>
	</distributionManagement>

	<issueManagement>
		<system>JIRA</system>
		<url>http://jira.codehaus.org/browse/TYNAMO</url>
	</issueManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-changes-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.6</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.0</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-webdav</artifactId>
							<version>1.0-beta-2</version>
						</dependency>
					</dependencies>		
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.11</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>1.2</version>
				</plugin>
				<!-- Update in the child poms as needed, no need to release a new Tynamo parent
				for every little Jetty plugin bug fix release. Still, we use it often enough
				to set a base version here -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.22</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
					<optimize>true</optimize>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/bin.xml</descriptor>
						<descriptor>src/main/assembly/src.xml</descriptor>
						<descriptor>src/main/assembly/examples.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- By default, do not deploy site, especially for the parent itself-->
					<goals>deploy</goals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.4</version>
				<inherited>true</inherited>
				<configuration>
					<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<source>1.6</source>
					<linksource>true</linksource>
					<taglet>org.apache.tapestry5.javadoc.TapestryDocTaglet</taglet>
					<tagletArtifact>
						<groupId>org.apache.tapestry</groupId>                       
						<artifactId>tapestry-javadoc</artifactId>                       
						<version>${tapestry-release-version}</version>                   
					</tagletArtifact>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.3.164</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.8.5</version>
			</dependency>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>5.9</version>
				<classifier>jdk15</classifier>
			</dependency>

			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<version>6.1.25</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
</project>
