<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.tynamo</groupId>
	<artifactId>tapestry-jdo-webapp</artifactId>
	<packaging>war</packaging>
	<name>Sample Tapestry 5 Application with JDO2 integration</name>

	<parent>
		<groupId>org.tynamo</groupId>
		<artifactId>tapestry-jdo-module</artifactId>
		<version>2.0.2-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-core</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-jdo</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
		will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
		of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.8</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>

		<!-- tapestry-test will conflict with RunJettyRun inside Eclipse. tapestry-test brings in Selenium, which
					 is based on Jetty 5.1; RunJettyRun uses Jetty 6.
				<dependency>
					<groupId>org.apache.tapestry</groupId>
					<artifactId>tapestry-test</artifactId>
					<version>${tapestry-release-version}</version>
					<scope>test</scope>
				</dependency>

				-->

		<!-- Provided by the servlet container, but sometimes referenced in the application
			   code. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
        
        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-eb</version>
        </dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<!-- Log to the console. -->
					<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
						<!-- This doesn't do anything for Jetty, but is a workaround for a Maven bug
													 that prevents the requestLog from being set. -->
						<append>true</append>
					</requestLog>
					<contextPath>/</contextPath>
					<systemProperties>
						<systemProperty>
							<name>tapestry.compress-whitespace</name>
							<value>false</value>
						</systemProperty>
						<systemProperty>
							<name>tapestry.production-mode</name>
							<value>false</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>

		<!-- Adds a report detailing the components, mixins and base classes defined by this module. -->
		<plugins>
			<plugin>
				<groupId>org.apache.tapestry</groupId>
				<artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version>
				<configuration>
					<rootPackage>org.tynamo.jpa.sample</rootPackage>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
