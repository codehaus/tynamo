<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!--  Seed data beans have to be declared from the smallest part to the largest composite object
		Every bean is expected to have a @Entity and @Id
	 -->

	<!--  ApplicationContext.getBeanDefinitionNames gets all bean names, but seed entity initializer
	should just skip over abstract ones -->
	<bean id="nonInstantiable" abstract="true">
		<property name="justsomerandomproperty" value="somevalue"/>
	</bean>

	<bean id="foo" class="org.trails.testhibernate.Foo" lazy-init="true">
		<property name="id" value="1"/>
		<property name="name" value="seed foo"/>
	</bean>

	<bean id="bar" class="org.trails.testhibernate.Bar" lazy-init="true">
		<property name="name" value="based on example"/>
	</bean>

	<bean id="wibble" class="org.trails.testhibernate.Wibble" lazy-init="true">
		<property name="name" value="wibbling entity"/>
		<property name="bar"><ref bean="bar"/></property>
	</bean>
	
	<!--  -->
	<bean id="bar1" class="org.trails.testhibernate.Bar" lazy-init="true">
		<property name="name" value="element1"/>
	</bean>
	<bean id="bar2" class="org.trails.testhibernate.Bar" lazy-init="true">
		<property name="name" value="element2"/>
	</bean>
	<bean id="barCollector" class="org.trails.testhibernate.BarCollector" lazy-init="true">
		<property name="name" value="barCollector1"/>
		<property name="bars">
			<list>
				<ref bean="bar1"/>
				<ref bean="bar2"/>
			</list>
		</property>		
	</bean>
</beans>
