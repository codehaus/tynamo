<module id="trails.core" version="1.0.0">

	<service-point id="DescriptorService" interface="org.trails.descriptor.DescriptorService"/>
	<service-point id="PersistenceService" interface="org.trails.persistence.PersistenceService"/>
	<service-point id="EditorService" interface="org.trails.finder.BlockFinder"/>
	<service-point id="ViewerService" interface="org.trails.finder.BlockFinder"/>
	<service-point id="MessageSource" interface="org.trails.i18n.TrailsMessageSource"/>
	<service-point id="AddNewLinkRenderer" interface="org.apache.tapestry.link.ILinkRenderer"/>
	<service-point id="BuilderDirector" interface="org.trails.builder.BuilderDirector" />
	<service-point id="FilePersister" interface="org.trails.component.blob.IFilePersister" />
	<service-point id="IconResolver" interface="org.trails.component.blob.IconResolver" />

	<!--
		====================================================================================================================
		Custom "squeezer" for trails-managed entities (turns squeezer service into a pipeline). Credits to James Carman.
		====================================================================================================================
	-->
	<service-point id="DataSqueezerTerminator" visibility="private" interface="org.apache.tapestry.services.DataSqueezer">
		<invoke-factory>
			<construct class="org.apache.tapestry.util.io.DataSqueezerImpl">
				<set-configuration property="squeezeAdaptors" configuration-id="tapestry.data.SqueezeAdaptors"/>
			</construct>
		</invoke-factory>
	</service-point>

	<implementation service-id="tapestry.data.DataSqueezer">
		<invoke-factory service-id="hivemind.lib.PipelineFactory">
			<create-pipeline filter-interface="org.trails.io.SqueezeFilter"
							 configuration-id="DataSqueezerFilters"
							 terminator="service:DataSqueezerTerminator"/>
		</invoke-factory>
	</implementation>

	<service-point id="EntitySqueezeStrategy" interface="org.trails.io.SqueezeFilter">
		<invoke-factory>
			<construct class="org.trails.io.EntitySqueezerStrategy">
				<set-object property="persistenceService" value="service:PersistenceService"/>
				<set-object property="descriptorService" value="service:DescriptorService"/>
				<set-object property="entityNameAbbreviator" value="service:EntityNameAbbreviator"/>
				<set-object property="builderDirector" value="service:BuilderDirector"/>
				<set property="delimiter" value=":"/>
				<set property="prefix" value="HIBRN8:"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="PagesEncoder" interface="org.apache.tapestry.engine.ServiceEncoder">
		<invoke-factory>
			<construct class="org.trails.engine.encoders.PagesEncoder">
				<set property="path" value="/trails"/>
				<set property="entitySqzrDelimiter" value=":"/>
				<set property="entitySqzrPrefix" value="HIBRN8:"/>
			</construct>
		</invoke-factory>
	</service-point>


	<configuration-point id="DataSqueezerFilters" schema-id="hivemind.lib.Pipeline">
		Allows you to plug in your own custom data squeezers in front of the default Tapestry
		data squeezer.
	</configuration-point>

	<contribution configuration-id="DataSqueezerFilters">
		<filter name="EntitySqueezeStrategy" object="service:EntitySqueezeStrategy"/>
	</contribution>

	<service-point id="PropertyDescriptorSqueezeStrategy" interface="org.apache.tapestry.util.io.SqueezeAdaptor">
		<invoke-factory>
			<construct class="org.trails.io.PropertyDescriptorSqueezerStrategy">
				<set-object property="descriptorService" value="service:DescriptorService"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="ClassDescriptorSqueezeStrategy" interface="org.apache.tapestry.util.io.SqueezeAdaptor">
		<invoke-factory>
			<construct class="org.trails.io.ClassDescriptorSqueezerStrategy">
				<set-object property="descriptorService" value="service:DescriptorService"/>
				<set-object property="entityNameAbbreviator" value="service:EntityNameAbbreviator"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="ClassAdaptor" interface="org.apache.tapestry.util.io.SqueezeAdaptor">
		<invoke-factory>
			<construct class="org.trails.io.ClassAdaptor"/>
		</invoke-factory>
	</service-point>

	<contribution configuration-id="tapestry.data.SqueezeAdaptors">
		<adaptor object="service:ClassAdaptor"/>
		<adaptor object="service:PropertyDescriptorSqueezeStrategy"/>
		<adaptor object="service:ClassDescriptorSqueezeStrategy"/>
	</contribution>

	<contribution configuration-id="tapestry.services.ApplicationServices">
		<service name="download" object="service:BlobService"/>
	</contribution>

	<service-point id="BlobService" interface="org.trails.component.blob.BlobDownloadService">
		<invoke-factory>
			<construct class="org.trails.component.blob.BlobDownloadService">
				<set-object property="linkFactory" value="infrastructure:linkFactory"/>
				<set-object property="response" value="service:tapestry.globals.WebResponse"/>
				<set-object property="persistenceService" value="spring:persistenceService"/>
				<set-object property="dataSqueezer" value="service:tapestry.data.DataSqueezer"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="ApplicationExceptionPresenter" interface="org.apache.tapestry.error.ExceptionPresenter">
		<invoke-factory>
			<construct class="org.trails.exception.ApplicationExceptionPresenterImpl">
				<set-object property="exceptionPageName" value="infrastructure:exceptionPageName"/>
				<set-object property="requestExceptionReporter" value="infrastructure:requestExceptionReporter"/>
				<set-object property="responseRenderer" value="infrastructure:responseRenderer"/>
				<set-object property="pageResolver" value="service:trails.core.PageResolver"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="PageResolver" interface="org.trails.page.PageResolver">
		<invoke-factory>
			<construct class="org.trails.page.DefaultPageResolver"/>
		</invoke-factory>
	</service-point>

	<service-point id="TrailsPagesService" interface="org.apache.tapestry.engine.IEngineService">
		<invoke-factory>
			<construct class="org.trails.engine.TrailsPagesService">
				<set-object property="responseRenderer" value="infrastructure:responseRenderer"/>
				<set-object property="linkFactory" value="infrastructure:linkFactory"/>
				<set-object property="dataSqueezer" value="service:tapestry.data.DataSqueezer"/>
				<set-object property="builderDirector" value="service:BuilderDirector"/>
			</construct>
		</invoke-factory>
	</service-point>

	<contribution configuration-id="tapestry.services.FactoryServices">
		<service name="trailsPagesService" object="service:TrailsPagesService"/>
	</contribution>

	<service-point id="ValidatorTranslatorService" interface="org.trails.validation.ValidatorTranslatorService">
		<invoke-factory>
			<construct class="org.trails.validation.ValidatorTranslatorService"/>
		</invoke-factory>
	</service-point>

	<service-point id="EntityNameAbbreviator" interface="org.trails.engine.encoders.abbreviator.EntityNameAbbreviator">
		<invoke-factory>
			<construct class="org.trails.engine.encoders.abbreviator.DefaultAbbreviator">
				<set-object property="descriptorService" value="service:DescriptorService"/>
			</construct>
		</invoke-factory>
	</service-point>

</module>